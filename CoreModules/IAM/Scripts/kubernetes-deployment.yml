---
# MCP-IAM Observability Kubernetes Deployment
# INNOVABIZ - Sistema de Governança Aumentada de Inteligência Empresarial Integrado
# Compliance: ISO 27001, GDPR, LGPD, BNA, PSD2, SOX, CSL

apiVersion: v1
kind: Namespace
metadata:
  name: innovabiz-iam
  labels:
    app.kubernetes.io/part-of: innovabiz
    innovabiz.io/module: iam
---
# ConfigMap para configurações específicas por mercado
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-iam-market-config
  namespace: innovabiz-iam
data:
  # Angola - Configurações BNA
  angola-config.json: |
    {
      "market": "Angola",
      "compliance_framework": "BNA",
      "mfa_level": "high",
      "retention_years": 7,
      "dual_approval": true,
      "audit_export_path": "/var/log/innovabiz/compliance/angola",
      "market_regulators": ["BNA", "CMC", "ARSSI"]
    }
  
  # Brasil - Configurações LGPD/BACEN
  brazil-config.json: |
    {
      "market": "Brazil",
      "compliance_framework": "LGPD",
      "mfa_level": "high",
      "retention_years": 5,
      "dual_approval": true,
      "audit_export_path": "/var/log/innovabiz/compliance/brazil",
      "market_regulators": ["BACEN", "CVM", "SUSEP", "ANPD"]
    }
  
  # Europa - Configurações GDPR/PSD2
  eu-config.json: |
    {
      "market": "EU",
      "compliance_framework": "GDPR",
      "mfa_level": "high",
      "retention_years": 7,
      "dual_approval": true,
      "audit_export_path": "/var/log/innovabiz/compliance/eu",
      "market_regulators": ["EBA", "ESMA", "EIOPA"]
    }
  
  # EUA - Configurações SOX/CCPA
  usa-config.json: |
    {
      "market": "USA",
      "compliance_framework": "SOX",
      "mfa_level": "medium",
      "retention_years": 7,
      "dual_approval": true,
      "audit_export_path": "/var/log/innovabiz/compliance/usa",
      "market_regulators": ["SEC", "FINRA", "FTC", "CFPB"]
    }
  
  # China - Configurações CSL
  china-config.json: |
    {
      "market": "China",
      "compliance_framework": "CSL",
      "mfa_level": "high",
      "retention_years": 5,
      "dual_approval": true,
      "audit_export_path": "/var/log/innovabiz/compliance/china",
      "market_regulators": ["CAC", "PBOC", "CBIRC"]
    }
  
  # Configuração Global
  global-config.json: |
    {
      "market": "Global",
      "compliance_framework": "ISO27001",
      "mfa_level": "medium",
      "retention_years": 3,
      "dual_approval": false,
      "audit_export_path": "/var/log/innovabiz/compliance/global",
      "market_regulators": []
    }
---
# Secret para credenciais de serviços externos
apiVersion: v1
kind: Secret
metadata:
  name: mcp-iam-observability-secrets
  namespace: innovabiz-iam
type: Opaque
data:
  # Credenciais para serviços - BASE64 encoded
  # Nota: Em produção, usar Vault ou Secrets Manager
  prometheus-user: cHJvbWV0aGV1cy11c2Vy  # prometheus-user
  prometheus-password: cHJvbWV0aGV1cy1wYXNzd29yZA==  # prometheus-password
  elasticsearch-user: ZWxhc3RpY3NlYXJjaC11c2Vy  # elasticsearch-user
  elasticsearch-password: ZWxhc3RpY3NlYXJjaC1wYXNzd29yZA==  # elasticsearch-password
  jaeger-user: amFlZ2VyLXVzZXI=  # jaeger-user
  jaeger-password: amFlZ2VyLXBhc3N3b3Jk  # jaeger-password
  otel-api-key: b3RlbC1hcGkta2V5  # otel-api-key
---
# Service para o MCP-IAM Observability Adapter
apiVersion: v1
kind: Service
metadata:
  name: mcp-iam-observability-service
  namespace: innovabiz-iam
  labels:
    app: mcp-iam-observability
    app.kubernetes.io/part-of: innovabiz
    innovabiz.io/module: iam
spec:
  selector:
    app: mcp-iam-observability
  ports:
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: health
      port: 8080
      targetPort: 8080
      protocol: TCP
  type: ClusterIP
---
# Deployment para MCP-IAM Observability
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-iam-observability
  namespace: innovabiz-iam
  labels:
    app: mcp-iam-observability
    app.kubernetes.io/part-of: innovabiz
    innovabiz.io/module: iam
spec:
  replicas: 2  # Alta disponibilidade para compliance
  selector:
    matchLabels:
      app: mcp-iam-observability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: mcp-iam-observability
        app.kubernetes.io/part-of: innovabiz
        innovabiz.io/module: iam
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: innovabiz-iam-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: mcp-iam-observability
          image: innovabiz/mcp-iam-observability:v1.0.0
          imagePullPolicy: Always
          env:
            - name: DEPLOYMENT_ENVIRONMENT
              value: "production"
            - name: SERVICE_VERSION
              value: "v1.0.0"
            - name: OTEL_SERVICE_NAME
              value: "mcp-iam-observability"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://otel-collector:4317"
            - name: PROMETHEUS_ENDPOINT
              value: ":9090"
            - name: LOG_LEVEL
              value: "info"
            - name: DEFAULT_MARKET
              value: "Global"
            - name: COMPLIANCE_LOGS_PATH
              value: "/var/log/innovabiz/compliance"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mcp-iam-observability-secrets
                  key: elasticsearch-user
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mcp-iam-observability-secrets
                  key: elasticsearch-password
          ports:
            - name: metrics
              containerPort: 9090
              protocol: TCP
            - name: health
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config-volume
              mountPath: /etc/innovabiz/config
              readOnly: true
            - name: logs-volume
              mountPath: /var/log/innovabiz
          livenessProbe:
            httpGet:
              path: /health
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /ready
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: config-volume
          configMap:
            name: mcp-iam-market-config
        - name: logs-volume
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - mcp-iam-observability
                topologyKey: "kubernetes.io/hostname"
---
# OpenTelemetry Collector Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: innovabiz-iam
  labels:
    app: otel-collector
    app.kubernetes.io/part-of: innovabiz
    innovabiz.io/module: observability
spec:
  replicas: 2
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8889"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: innovabiz-iam-sa
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:latest
          imagePullPolicy: Always
          env:
            - name: DEPLOYMENT_ENVIRONMENT
              value: "production"
            - name: SERVICE_VERSION
              value: "v1.0.0"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mcp-iam-observability-secrets
                  key: elasticsearch-user
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mcp-iam-observability-secrets
                  key: elasticsearch-password
          ports:
            - containerPort: 4317 # OTLP gRPC
            - containerPort: 4318 # OTLP HTTP
            - containerPort: 8889 # Prometheus metrics
            - containerPort: 13133 # Health
            - containerPort: 1777 # pprof
            - containerPort: 55679 # ZPages
          volumeMounts:
            - name: otel-collector-config
              mountPath: /etc/otel-collector/config.yaml
              subPath: config.yaml
            - name: certs
              mountPath: /etc/certs
              readOnly: true
            - name: otel-collector-logs
              mountPath: /var/log/otel-collector
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: otel-collector-config
          configMap:
            name: otel-collector-config
        - name: certs
          secret:
            secretName: otel-collector-certs
        - name: otel-collector-logs
          emptyDir: {}
---
# ConfigMap para OpenTelemetry Collector
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: innovabiz-iam
data:
  config.yaml: |
    # Configuração importada de scripts/otel-collector-config.yml
    # Verificar arquivo para detalhes completos
---
# Service para OpenTelemetry Collector
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: innovabiz-iam
  labels:
    app: otel-collector
spec:
  selector:
    app: otel-collector
  ports:
    - name: otlp-grpc
      port: 4317
      targetPort: 4317
      protocol: TCP
    - name: otlp-http
      port: 4318
      targetPort: 4318
      protocol: TCP
    - name: prometheus
      port: 8889
      targetPort: 8889
      protocol: TCP
    - name: health
      port: 13133
      targetPort: 13133
      protocol: TCP
  type: ClusterIP
---
# ServiceAccount para permissões necessárias
apiVersion: v1
kind: ServiceAccount
metadata:
  name: innovabiz-iam-sa
  namespace: innovabiz-iam
---
# PodMonitoring para Prometheus Operator
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: mcp-iam-observability-monitor
  namespace: innovabiz-iam
  labels:
    release: prometheus-operator
spec:
  selector:
    matchLabels:
      app: mcp-iam-observability
  podMetricsEndpoints:
    - port: metrics
      interval: 15s
      path: /metrics
---
# PodMonitoring para OTEL Collector
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: otel-collector-monitor
  namespace: innovabiz-iam
  labels:
    release: prometheus-operator
spec:
  selector:
    matchLabels:
      app: otel-collector
  podMetricsEndpoints:
    - port: prometheus
      interval: 15s
      path: /metrics
---
# HorizontalPodAutoscaler para escalabilidade automática
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mcp-iam-observability-hpa
  namespace: innovabiz-iam
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mcp-iam-observability
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 20
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 30