version: '3.8'

services:
  # API Gateway (KrakenD)
  iam-gateway:
    image: devopsfaith/krakend:2.3.2
    container_name: iam-gateway
    volumes:
      - ../api-gateway/:/etc/krakend/
    environment:
      - KRAKEND_PORT=8080
      - KRAKEND_ENVIRONMENT=${ENVIRONMENT:-production}
      - KRAKEND_LOG_LEVEL=${LOG_LEVEL:-INFO}
      - REGION_CODE=${REGION_CODE:-EU}
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/v1/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - iam-network
      - innovabiz-network
    depends_on:
      - iam-auth-service
      - iam-user-service
      - iam-database

  # Serviço de Autenticação
  iam-auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: iam-auth-service
    environment:
      - NODE_ENV=${ENVIRONMENT:-production}
      - PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DB_HOST=iam-database
      - DB_PORT=5432
      - DB_NAME=iam_db
      - DB_USER=iam_user
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=innovabiz-iam
      - JWT_AUDIENCE=innovabiz-platform
      - JWT_EXPIRY=${JWT_EXPIRY:-900}
      - REFRESH_TOKEN_EXPIRY=${REFRESH_TOKEN_EXPIRY:-2592000}
      - REDIS_HOST=iam-redis
      - REDIS_PORT=6379
      - REGION_CODE=${REGION_CODE:-EU}
      - MCP_ENABLED=true
      - MCP_BROKER_URL=amqp://guest:guest@innovabiz-rabbitmq:5672
      - GRAPHQL_ENDPOINT=http://innovabiz-graphql:8080/graphql
      - TELEMETRY_ENABLED=true
      - OPENTELEMETRY_ENDPOINT=http://innovabiz-otel-collector:4318/v1/traces
    volumes:
      - ../auth-service/logs:/app/logs
      - ../auth-service/config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - iam-network
      - innovabiz-network
    depends_on:
      - iam-database
      - iam-redis

  # Serviço de Gerenciamento de Usuários
  iam-user-service:
    build:
      context: ../user-service
      dockerfile: Dockerfile
    container_name: iam-user-service
    environment:
      - NODE_ENV=${ENVIRONMENT:-production}
      - PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DB_HOST=iam-database
      - DB_PORT=5432
      - DB_NAME=iam_db
      - DB_USER=iam_user
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - REDIS_HOST=iam-redis
      - REDIS_PORT=6379
      - REGION_CODE=${REGION_CODE:-EU}
      - MCP_ENABLED=true
      - MCP_BROKER_URL=amqp://guest:guest@innovabiz-rabbitmq:5672
      - GRAPHQL_ENDPOINT=http://innovabiz-graphql:8080/graphql
      - TELEMETRY_ENABLED=true
      - OPENTELEMETRY_ENDPOINT=http://innovabiz-otel-collector:4318/v1/traces
    volumes:
      - ../user-service/logs:/app/logs
      - ../user-service/config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - iam-network
      - innovabiz-network
    depends_on:
      - iam-database
      - iam-redis

  # Base de Dados do IAM
  iam-database:
    image: postgres:15.3-alpine
    container_name: iam-database
    environment:
      - POSTGRES_DB=iam_db
      - POSTGRES_USER=iam_user
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secure_password}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - iam-db-data:/var/lib/postgresql/data
      - ../database/schemas:/docker-entrypoint-initdb.d
      - ../database/backup:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iam_user -d iam_db"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    networks:
      - iam-network
    ports:
      - "5432:5432"

  # Cache Redis para o IAM
  iam-redis:
    image: redis:7.0-alpine
    container_name: iam-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-secure_redis_password} --appendonly yes
    volumes:
      - iam-redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - iam-network

  # Serviço de Notificação (para envio de OTP, emails, etc.)
  iam-notification-service:
    build:
      context: ../notification-service
      dockerfile: Dockerfile
    container_name: iam-notification-service
    environment:
      - NODE_ENV=${ENVIRONMENT:-production}
      - PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - REDIS_HOST=iam-redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-secure_redis_password}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMS_PROVIDER=${SMS_PROVIDER:-twilio}
      - SMS_API_KEY=${SMS_API_KEY}
      - SMS_API_SECRET=${SMS_API_SECRET}
      - WHATSAPP_ENABLED=${WHATSAPP_ENABLED:-false}
      - WHATSAPP_API_KEY=${WHATSAPP_API_KEY}
      - REGION_CODE=${REGION_CODE:-EU}
      - MCP_ENABLED=true
      - MCP_BROKER_URL=amqp://guest:guest@innovabiz-rabbitmq:5672
    volumes:
      - ../notification-service/logs:/app/logs
      - ../notification-service/templates:/app/templates
    restart: unless-stopped
    networks:
      - iam-network
      - innovabiz-network
    depends_on:
      - iam-redis

  # Serviço de Auditoria e Compliance
  iam-audit-service:
    build:
      context: ../audit-service
      dockerfile: Dockerfile
    container_name: iam-audit-service
    environment:
      - NODE_ENV=${ENVIRONMENT:-production}
      - PORT=8000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DB_HOST=iam-database
      - DB_PORT=5432
      - DB_NAME=iam_db
      - DB_USER=iam_user
      - DB_PASSWORD=${DB_PASSWORD:-secure_password}
      - REGION_CODE=${REGION_CODE:-EU}
      - COMPLIANCE_GDPR=${COMPLIANCE_GDPR:-true}
      - COMPLIANCE_LGPD=${COMPLIANCE_LGPD:-false}
      - COMPLIANCE_PNDSB=${COMPLIANCE_PNDSB:-false}
      - COMPLIANCE_HIPAA=${COMPLIANCE_HIPAA:-false}
      - MCP_ENABLED=true
      - MCP_BROKER_URL=amqp://guest:guest@innovabiz-rabbitmq:5672
      - TELEMETRY_ENABLED=true
      - OPENTELEMETRY_ENDPOINT=http://innovabiz-otel-collector:4318/v1/traces
    volumes:
      - ../audit-service/logs:/app/logs
      - ../audit-service/templates:/app/templates
    restart: unless-stopped
    networks:
      - iam-network
      - innovabiz-network
    depends_on:
      - iam-database

volumes:
  iam-db-data:
    driver: local
  iam-redis-data:
    driver: local

networks:
  iam-network:
    driver: bridge
  innovabiz-network:
    external: true
