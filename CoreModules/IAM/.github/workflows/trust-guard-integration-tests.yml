name: Trust Guard Integration Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/app/trust_*.py'
      - 'src/api/graphql/trust_*.py'
      - '.github/workflows/trust-guard-integration-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/app/trust_*.py'
      - 'src/api/graphql/trust_*.py'

jobs:
  test:
    name: Run Trust Guard Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_iam
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-observability.txt
          pip install pytest pytest-cov pytest-mock

      - name: Run unit tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_iam
          REDIS_URL: redis://localhost:6379/0
        run: |
          pytest src/tests/unit/test_trust_score_engine.py -v --cov=src/app --cov-report=xml

      - name: Run integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_iam
          REDIS_URL: redis://localhost:6379/0
          TRUST_GUARD_API_URL: ${{ secrets.TRUST_GUARD_API_URL }}
          TRUST_GUARD_API_KEY: ${{ secrets.TRUST_GUARD_API_KEY }}
        run: |
          pytest src/tests/integration/bureau-credito/test_trust_guard_integration.py -v

      - name: Verify trust score GraphQL resolvers
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_iam
          REDIS_URL: redis://localhost:6379/0
        run: |
          python -m src.tests.integration.bureau-credito.test_trust_score_graphql

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: trustguard
          name: trustguard-codecov
          fail_ci_if_error: true

  security-scan:
    name: Security Scan TrustGuard Components
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit security scan
        run: |
          bandit -r src/app/trust_*.py src/api/graphql/trust_*.py -f json -o bandit-results.json

      - name: Run Safety check for dependencies
        run: |
          safety check -r requirements.txt --full-report

      - name: Upload security scan results
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: |
            bandit-results.json

  performance-test:
    name: Performance Test TrustGuard Components
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-benchmark

      - name: Run performance tests
        run: |
          pytest src/tests/unit/test_trust_score_engine.py::TestTrustScoreEngine::test_calculate_score_with_approved_verifications -v --benchmark-only

      - name: Archive performance test results
        uses: actions/upload-artifact@v3
        with:
          name: performance-test-results
          path: .pytest_cache/*/benchmark-*.json