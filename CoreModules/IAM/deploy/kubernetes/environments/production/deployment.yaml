# IAM - Deployment para ambiente de Produção
# Este manifesto define a implantação do serviço IAM em ambiente de Produção
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iam-service
  namespace: innovabiz-iam-production
  labels:
    app: iam-service
    module: iam
    environment: production
    version: v1
    tier: backend
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: iam-service
  template:
    metadata:
      labels:
        app: iam-service
        module: iam
        environment: production
        version: v1
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: iam-service
        image: ${CI_REGISTRY_IMAGE}/iam-service:${CI_COMMIT_TAG}
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: PORT
          value: "3000"
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: iam-secrets
              key: auth-secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: iam-db-credentials
              key: url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: iam-redis-credentials
              key: url
        - name: TENANT_CONFIG_PATH
          value: "/etc/config/tenants"
        - name: RISK_MANAGEMENT_API_URL
          valueFrom:
            configMapKeyRef:
              name: iam-integration-config
              key: risk-management-url
        - name: PAYMENT_GATEWAY_API_URL
          valueFrom:
            configMapKeyRef:
              name: iam-integration-config
              key: payment-gateway-url
        - name: OBSERVABILITY_ENABLED
          value: "true"
        - name: OTEL_SERVICE_NAME
          value: "iam-service-production"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: observability-config
              key: otlp-endpoint
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        - name: logs-volume
          mountPath: /var/log/iam
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 3000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 3000
          initialDelaySeconds: 40
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/startup
            port: 3000
          failureThreshold: 12
          periodSeconds: 10
      volumes:
      - name: config-volume
        configMap:
          name: iam-config
      - name: logs-volume
        emptyDir: {}
      imagePullSecrets:
      - name: registry-credentials
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: iam-service
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: iam-service