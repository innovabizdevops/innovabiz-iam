---
# INNOVABIZ IAM Audit Service - Jaeger Deployment
# Versão: 1.0.0
# Ano: 2025
# Ambiente: Multi-plataforma, Multi-dimensional e Multi-Contexto
# Alinhado com: ISO 20000, ITIL v4, ISO 27001, NIST SP 800-53, W3C Trace Context

apiVersion: jaegertracing.io/v1
kind: Jaeger
metadata:
  name: iam-audit-jaeger
  namespace: iam-system
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: innovabiz-observability
    app.kubernetes.io/component: tracing
    innovabiz.com/module: iam-audit
    innovabiz.com/tier: observability
spec:
  strategy: production
  agent:
    strategy: DaemonSet
    options:
      log-level: info
    resources:
      limits:
        cpu: 200m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi
  collector:
    replicas: 2
    options:
      log-level: info
      collector.num-workers: 50
      collector.queue-size: 2000
      collector.otlp.enabled: true
      collector.zipkin.host-port: ":9411"
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    autoscale:
      enabled: true
      minReplicas: 2
      maxReplicas: 5
      targetCPUUtilizationPercentage: 80
  query:
    options:
      log-level: info
      query.additional-headers: ["X-Tenant-ID", "X-Region", "X-Environment"]
      query.max-traces: 1500
      query.ui-config: |
        {
          "menu": [
            {
              "label": "Sobre IAM Audit",
              "items": [
                {
                  "label": "Documentação",
                  "url": "https://docs.innovabiz.com/iam-audit-service"
                },
                {
                  "label": "SLAs",
                  "url": "https://sla.innovabiz.com/iam-audit"
                }
              ]
            },
            {
              "label": "Links Úteis",
              "items": [
                {
                  "label": "Grafana",
                  "url": "https://${GRAFANA_HOST}"
                },
                {
                  "label": "Prometheus",
                  "url": "https://${PROMETHEUS_HOST}"
                }
              ]
            }
          ],
          "archiveEnabled": true,
          "trackFindInPage": true,
          "search": {
            "maxLookback": {
              "label": "1 dia",
              "value": "1d"
            },
            "maxLimit": 1500
          }
        }
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    serviceType: ClusterIP
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/auth-type: "basic"
        nginx.ingress.kubernetes.io/auth-secret: "jaeger-auth"
        nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
      hosts:
        - ${JAEGER_HOST}
      tls:
        - secretName: jaeger-tls
          hosts:
            - ${JAEGER_HOST}
  storage:
    type: elasticsearch
    options:
      es:
        server-urls: https://${ELASTICSEARCH_HOST}:9200
        username: ${ELASTIC_USERNAME}
        password: ${ELASTIC_PASSWORD}
        tls:
          enabled: true
          cert: /es-certs/tls.crt
          key: /es-certs/tls.key
          ca: /es-certs/ca.crt
        version: 8
        create-index-templates: true
        index-prefix: innovabiz-iam-traces
        use-aliases: true
        sniffer: true
        max-span-age: 168h  # 7 dias
        tags-as-fields:
          all: true
        tags-as-fields-all-as-strings: true
    secretName: jaeger-es-credentials
    volumeName: es-certs
  volumeMounts:
    - name: es-certs
      mountPath: /es-certs
  volumes:
    - name: es-certs
      secret:
        secretName: jaeger-es-certs
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "16686"
---
apiVersion: v1
kind: Secret
metadata:
  name: jaeger-auth
  namespace: iam-system
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: innovabiz-observability
type: Opaque
data:
  auth: ${JAEGER_AUTH_HASH}  # htpasswd -nb admin <password> | base64
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: jaeger
  namespace: iam-system
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/part-of: innovabiz-observability
    release: prometheus-operator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger-operator
      app.kubernetes.io/part-of: innovabiz-observability
  namespaceSelector:
    matchNames:
      - iam-system
  endpoints:
  - port: http
    interval: 15s
    path: /metrics